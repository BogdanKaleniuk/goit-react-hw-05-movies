{"version":3,"file":"static/js/764.6b4ebaca.chunk.js","mappings":"8LAkEA,UA5De,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASF,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAKjBC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,GAKFK,MAAM,GAAD,OATK,gCASL,gCARK,mCAQL,4DAA8FL,IAChGM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJV,EACEU,EAAKC,QAAQC,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAA2BC,MAA9B,EAAOA,MAAP,IAEpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIjB,GAAE,CAACf,IASJ,OACE,4BACE,kBAAMkB,OAAO,GAAGC,SATE,SAAAC,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOvB,MAAMsB,MAC7BrB,EAASqB,GACT5B,EAAgB,CAAEM,MAAOsB,GAC1B,EAIG,WACE,kBAAOE,KAAK,OAAOC,KAAK,QAAQC,aAAc1B,KAC9C,mBAAQwB,KAAK,SAAb,wBAEF,wBACG1B,EAAOa,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CACEc,GAAE,UAAKf,GACPgB,OAAQ,CAAEC,WAAW,SAAD,OAAW7B,IAC/B8B,MAAO,CAAEC,KAAM7B,GAHjB,SAKGW,KANID,EAUZ,QAIR,C","sources":["pages/Movies.js"],"sourcesContent":["// import SearchBar from '../components/SearchBar/SearchBar';\n// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import { fetchSearchMovies } from '../components/movieApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(queryParam);\n  const location = useLocation();\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7880f10208129df405f0f3d5264141ee';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    function fetchMovie() {\n      fetch(`${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\n        .then(response => response.json())\n        .then(data => {\n          setMovies(\n            data.results.map(({ id, title }) => ({ id: id, title: title }))\n          );\n        })\n        .catch(error => console.log(error));\n    }\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubbmit = e => {\n    e.preventDefault();\n    const value = e.target.query.value;\n    setQuery(value);\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubbmit}>\n        <input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`${id}`}\n                search={{ querySerch: `query=${query}` }}\n                state={{ from: location }}\n              >\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Movies;"],"names":["useSearchParams","searchParams","setSearchParams","queryParam","get","useState","movies","setMovies","query","setQuery","location","useLocation","useEffect","fetch","then","response","json","data","results","map","id","title","catch","error","console","log","action","onSubmit","e","preventDefault","value","target","type","name","defaultValue","to","search","querySerch","state","from"],"sourceRoot":""}