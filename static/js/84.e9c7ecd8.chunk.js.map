{"version":3,"file":"static/js/84.e9c7ecd8.chunk.js","mappings":"6PACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAe,sBAEfC,EAAU,2CACVC,EAAW,iBAGV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaJ,EAAAA,GAAAA,IAAA,UAAaC,GAAb,OAA4BC,IADzC,cACCG,EADD,yBAGEA,EAAIC,MAHN,kEAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACaR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAA8BN,EAA9B,YAAyCC,IADtD,cACCE,EADD,yBAEEA,EAAIC,MAFN,kEAaA,IAAMG,EAAe,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,GAAAA,IAAA,iBACNQ,EADM,qBACcN,EADd,oBADW,cACvBG,EADuB,yBAKtBA,EAAIC,KAAKI,MALa,2CAAH,qD,8HCnCfC,E,OAASC,GAAAA,OAAH,sV,SCKF,SAASC,IACxB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAIQZ,GAAYa,EAAAA,EAAAA,MAAZb,QACFc,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEbC,EAAkB,CACpBC,MAAO,aAELC,EAAuB,CAC3BD,MAAO,SAkBP,OAbAE,EAAAA,EAAAA,YAAU,WACRT,GAAW,IACXb,EAAAA,EAAAA,IAAiBC,GACdsB,MAAK,SAAAzB,GACJW,EAASX,EACV,IACA0B,OAAM,SAAAd,GACLC,EAAS,UACTc,QAAQC,IAAIhB,EACb,IACAiB,SAAQ,kBAAMd,GAAW,EAAjB,GACZ,GAAE,CAACZ,IACJwB,QAAQC,IAAIlB,IAEV,+BACE,4BACE,SAACJ,EAAD,CAAQwB,QAlBM,0BAAMX,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUc,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAkBd,qBAIClB,GAAW,cACXF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBAAKuB,MAAO,IACVC,IAAG,0CAAqCxB,EAAMyB,aAC9CC,IAAK1B,EAAM2B,SAEb,wBAAK3B,EAAM2B,SACX,6BA5CY,IAAIC,KAAK5B,EAAM6B,cAAcC,cA4CzC,QACA,wCAAgB9B,EAAM+B,eACtB,4BACE,sCACA,uBAAI/B,EAAMgC,kBAIhB,mBACA,4BACE,oDACA,SAAC,KAAD,CACEC,GAAE,kBAAaxC,EAAb,YACFyC,MAAO,qBAAGC,SAA2BxB,EAAkBE,CAAhD,EACPQ,MAAOd,EAASc,MAHlB,UAKE,sCAGF,SAAC,KAAD,CACEY,GAAE,kBAAaxC,EAAb,SACFyC,MAAO,qBAAGC,SAA2BxB,EAAkBE,CAAhD,EACPQ,MAAOd,EAASc,MAHlB,UAKE,mCAEF,mBACA,SAAC,KAAD,WAKP,C","sources":["components/movieApi.js","pages/FilmDetails.style.js","pages/FilmDetails.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst trendsParams = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\nconst API_KEY = 'api_key=7880f10208129df405f0f3d5264141ee';\nconst language = 'language=en-US';\n\n\nexport async function fetchMovies() {\n  const res = await axios.get(`${trendsParams}${API_KEY}`);\n\n  return res.data;\n};\n// const API_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '7880f10208129df405f0f3d5264141ee';\n// `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n\nexport async function fetchSearchMovies(query) {\n  const res = await axios.get(`${SEARCH_URL}api_key=7880f10208129df405f0f3d5264141ee&language=en-US&page=1&include_adult=false&query=${query}`);\n  return res.data;\n};\n\nexport async function GetMoviesDetails(movieId) {\n  const res = await axios.get(`movie/${movieId}?${API_KEY}&${language}`);\n  return res.data;\n}\n\nexport async function fetchMoviesReviews(movieId, page = 1) {\n  const res = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesCast = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}$/credits?${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  font-weight: 800;\n  width: 100px;\n  height: 40px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 0 16px;\n  border-radius: 10px;\n  color: black;\n  background-color: white;\n  cursor: pointer;\n    :hover,\n    :focus {\n    color: white;\n    background-color:  orangered;\n    border: 3px solid white;\n`","import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { GetMoviesDetails } from \"../components/movieApi\";\nimport { useParams } from 'react-router-dom';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { Button } from './FilmDetails.style';\n\n  export default function FilmDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  let activeClassName = {\n    color: 'orangered',\n  };\n  let activeColorNameBlack = {\n  color: 'black',\n};\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    GetMoviesDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(error => {\n        setError('Error3');\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  console.log(movie)\n  return (\n    <>\n      <div>\n        <Button onClick={handleClick}>\n          Go back\n        </Button>\n        \n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img width={300}\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>\n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n            style={({ isActive }) => (isActive ? activeClassName : activeColorNameBlack)}\n            state={location.state}\n          >\n            <p>Reviews</p>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={({ isActive }) => (isActive ? activeClassName : activeColorNameBlack)}\n            state={location.state}\n          >\n            <p>Cast</p>\n          </NavLink>\n          <hr />\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n  };\n  "],"names":["axios","trendsParams","API_KEY","language","fetchMovies","res","data","GetMoviesDetails","movieId","fetchMoviesCast","cast","Button","styled","FilmDetails","useState","movie","setMovie","error","setError","loading","setLoading","useParams","location","useLocation","navigate","useNavigate","activeClassName","color","activeColorNameBlack","useEffect","then","catch","console","log","finally","onClick","state","from","width","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","to","style","isActive"],"sourceRoot":""}