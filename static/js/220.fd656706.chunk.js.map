{"version":3,"file":"static/js/220.fd656706.chunk.js","mappings":"sOACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAe,sBAEfC,EAAU,2CACVC,EAAW,iBAGV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaJ,EAAAA,GAAAA,IAAA,UAAaC,GAAb,OAA4BC,IADzC,cACCG,EADD,yBAGEA,EAAIC,MAHN,kEAeA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,uFACaR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAA8BN,EAA9B,YAAyCC,IADtD,cACCE,EADD,yBAIEA,EAAIC,MAJN,kE,oHCpBQ,SAASG,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAIQR,GAAYS,EAAAA,EAAAA,MAAZT,QACFU,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAyBjB,OAdAC,EAAAA,EAAAA,YAAU,WAERN,GAAW,IACXT,EAAAA,EAAAA,IAAiBC,GACde,MAAK,SAAAlB,GACJO,EAASP,EACV,IACAmB,OAAM,SAAAX,GACLC,EAAS,UACTW,QAAQC,IAAIb,EACb,IACAc,SAAQ,kBAAMX,GAAW,EAAjB,GACZ,GAAE,CAACR,IACJiB,QAAQC,IAAIf,IAEV,+BACE,4BACE,mBAAQiB,QArBM,0BAAMR,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUW,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAqBd,qBAICf,GAAW,cACXF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBACEoB,IAAG,0CAAqCpB,EAAMqB,aAC9CC,IAAKtB,EAAMuB,SAEb,wBAAKvB,EAAMuB,SACX,6BA7CY,IAAIC,KAAKxB,EAAMyB,cAAcC,cA6CzC,QACA,wCAAgB1B,EAAM2B,eACtB,4BACE,sCACA,uBAAI3B,EAAM4B,kBAIhB,mBACA,4BACE,oDAgBA,yBAMP,C","sources":["components/movieApi.js","pages/FilmDetails.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst trendsParams = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\nconst API_KEY = 'api_key=7880f10208129df405f0f3d5264141ee';\nconst language = 'language=en-US';\n\n\nexport async function fetchMovies() {\n  const res = await axios.get(`${trendsParams}${API_KEY}`);\n\n  return res.data;\n};\n// const API_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '7880f10208129df405f0f3d5264141ee';\n// `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n\nexport async function fetchSearchMovies(query) {\n  const res = await axios.get(`${SEARCH_URL}api_key=7880f10208129df405f0f3d5264141ee&language=en-US&page=1&include_adult=false&query=${query}`);\n\n  return res.data;\n};\n\nexport async function GetMoviesDetails(movieId) {\n  const res = await axios.get(`movie/${movieId}?${API_KEY}&${language}`);\n// console.log(res.data)\n\n  return res.data;\n}\n\n// export const GetMoviesDetails = async id => {\n//   const res = await axios.get(`movie/${id}?${API_KEY}&language=en-US`);\n\n//   return res.data;\n// };","import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { GetMoviesDetails } from \"../components/movieApi\";\nimport { useParams } from 'react-router-dom';\n\nexport default function FilmDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n \n\n  // let activeClassName = {\n  //   color: '#2196f3',\n  // };\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n// const API_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '7880f10208129df405f0f3d5264141ee';\n\n  useEffect(() => {\n    // const urlDetails = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    setLoading(true);\n    GetMoviesDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(error => {\n        setError('Error3');\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  console.log(movie)\n  return (\n    <>\n      <div>\n        <button onClick={handleClick}>\n          Go back\n        </button>\n        \n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>\n          {/* <NavLink\n            to={`/movies/${movieId}/reviews`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <p>Reviews</p>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <p>Cast</p>\n          </NavLink> */}\n          <hr />\n          {/* <Outlet /> */}\n        </div>\n      </div>\n    </>\n  );\n  };\n  "],"names":["axios","trendsParams","API_KEY","language","fetchMovies","res","data","GetMoviesDetails","movieId","FilmDetails","useState","movie","setMovie","error","setError","loading","setLoading","useParams","location","useLocation","navigate","useNavigate","useEffect","then","catch","console","log","finally","onClick","state","from","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview"],"sourceRoot":""}